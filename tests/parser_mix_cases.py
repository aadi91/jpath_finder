BASIC_PATH_CASE = (
    ("name", ["data"]),
    ("data[0].id", ["1"]),
    ("data[0].type", ["articles"]),
    ("data[0].attributes.title", ["JSON:API paints my bikeshed!"]),
    ("data[0].attributes.body", ["The shortest article. Ever."]),
    ("data[0].attributes.created", ["2015-05-22T14:56:29.000Z"]),
    ("data[0].attributes.updated", ["2015-05-22T14:56:28.000Z"]),
    ("data[0].attributes.info.meta.totalPages", [13]),
    ("data[0].attributes.info.data_2[*].id", ["3"]),
    ("data[0].attributes.info.data_2[*].type", ["articles"]),
    ("data[0].attributes.info.data_2[*].attributes.title", ["JSON:API paints my bikeshed!"]),
    ("data[0].attributes.info.data_2[*].attributes.body", ["The shortest article. Ever."]),
    ("data[0].attributes.info.data_2[*].attributes.created", ["2015-05-22T14:56:29.000Z"]),
    ("data[0].attributes.info.data_2[*].attributes.updated", ["2015-05-22T14:56:28.000Z"]),
    ("data[0].attributes.info.data_2[*].attributes.others.errors[*].status", ["403", "422", "500"]),
    ("data[0].attributes.info.data_2[*].attributes.others.errors[*].source.pointer",
     ["/data/attributes/secretPowers", "/data/attributes/volume", "/data/attributes/reputation"]),
    ("data[0].attributes.info.data_2[*].attributes.others.errors[*].detail",
     ["Sundays.", "go to 11.", "after three requests."]),
    ("data[0].attributes.info.links.self", ["http://example.com/articles?page[number]=3&page[size]=1"]),
    ("data[0].attributes.info.links.first", ["http://example.com/articles?page[number]=1&page[size]=1"]),
    ("data[0].attributes.info.links.prev", ["http://example.com/articles?page[number]=2&page[size]=1"]),
    ("data[0].attributes.info.links.next", ["http://example.com/articles?page[number]=4&page[size]=1"]),
    ("data[0].attributes.info.links.last", ["http://example.com/articles?page[number]=13&page[size]=1"]),
    ("data[0].attributes.info.other.errors[0].source.parameter", ["include"]),
    ("data[0].attributes.info.other.errors[0].title", ["Invalid Query Parameter"]),
    ("data[0].attributes.info.other.errors[0].detail", ["The resource does not have an `author`."]),
    ("data[0].relationships.author.data.id", ["42"]),
    ("data[0].relationships.author.data.type", ["people"]),
    ("included[0].type", ["people"]),
    ("included[0].id", [42]),
    ("included[0].attributes.name", ["John"]),
    ("included[0].attributes.age", [80]),
    ("included[0].attributes.gender", ["male"]),
    ("applications.data[0].type", ["articles"]),
    ("applications.data[0].id", ["1"]),
    ("applications.data[0].attributes.title", ["JSON:API paints my bikeshed!"]),
    ("applications.data[0].attributes.body", ["The shortest article. Ever."]),
    ("applications.data[0].relationships.author.data.id", ["42"]),
    ("applications.data[0].relationships.author.data.type", ["people"]),
    ("applications.included[0].type", ["people"]),
    ("applications.included[0].id", ["42"]),
    ("applications.included[0].attributes.name", ["John"])
)

DESCENDANT_PATH_CASE = (
    ("list_items[4]", ['item_5']),
    ("data..title", ['JSON:API paints my bikeshed!',
                     'JSON:API paints my bikeshed!',
                     'The backend responded with an error',
                     'Invalid Query Parameter']),
    ("data..body",  ['The shortest article. Ever.', 'The shortest article. Ever.']),
    ("data..created", ['2015-05-22T14:56:29.000Z', '2015-05-22T14:56:29.000Z']),
    ("data..updated", ['2015-05-22T14:56:28.000Z', '2015-05-22T14:56:28.000Z']),
    ("data..totalPages", [13]),
    ("data..id", ['1', '3', '42']),
    ("data..type", ['articles', 'articles', 'people']),
    ("data..status", ['403', '422', '500']),
    ("data..pointer", ['/data/attributes/secretPowers',
                       '/data/attributes/volume',
                       '/data/attributes/reputation'])
)

COMPARISON_FILTER = [
    "$.data_5.virtual_machines[?(@.cpu)]",
    "$.data_5.virtual_machines[?(@.cpu>8)]",
    "$.data_5.virtual_machines[?(@.cpu==4)]",
    # "$.data_5.virtual_machines[?(@.cpu==4 & @.name==Windows)]",
]
